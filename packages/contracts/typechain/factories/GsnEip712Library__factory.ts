/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { GsnEip712Library } from "../GsnEip712Library";

export class GsnEip712Library__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<GsnEip712Library> {
    return super.deploy(overrides || {}) as Promise<GsnEip712Library>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GsnEip712Library {
    return super.attach(address) as GsnEip712Library;
  }
  connect(signer: Signer): GsnEip712Library__factory {
    return super.connect(signer) as GsnEip712Library__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GsnEip712Library {
    return new Contract(address, _abi, signerOrProvider) as GsnEip712Library;
  }
}

const _abi = [
  {
    inputs: [],
    name: "EIP712DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GENERIC_PARAMS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYDATA_TYPE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYDATA_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_SUFFIX",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_TYPE",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAY_REQUEST_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61052c610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100825760003560e01c8063066a310c146100875780636225e61b146100a5578063931cd38f146100ad578063987673f7146100b5578063abf0d3f4146100bd578063c46cf83f146100d2578063c49f91d3146100da578063cc0c62b2146100e2575b600080fd5b61008f6100ea565b60405161009c91906103c1565b60405180910390f35b61008f610106565b61008f61019e565b61008f6101c7565b6100c56101ef565b60405161009c91906103b8565b61008f61028e565b6100c56102aa565b6100c56102ce565b6040518060800160405280604a81526020016104ad604a913981565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060800160405280604a81526020016104ad604a91396040518060e0016040528060a1815260200161040c60a1913960405160200161016d919061037c565b60408051601f198184030181529082905261018c93929160200161031d565b60405160208183030381529060405281565b6040518060e0016040528060a1815260200161040c60a1913960405160200161018c919061037c565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b81525081565b6040518060400160405280600c81526020016b14995b185e54995c5d595cdd60a21b8152506040518060800160405280604a81526020016104ad604a91396040518060e0016040528060a1815260200161040c60a19139604051602001610256919061037c565b60408051601f198184030181529082905261027593929160200161031d565b6040516020818303038152906040528051906020012081565b6040518060e0016040528060a1815260200161040c60a1913981565b7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6040518060e0016040528060a1815260200161040c60a191398051906020012081565b600081518084526103098160208601602086016103db565b601f01601f19169290920160200192915050565b6000845161032f8184602089016103db565b600560fb1b908301908152845161034d8160018401602089016103db565b600b60fa1b60019290910191820152835161036f8160028401602088016103db565b0160020195945050505050565b60007352656c6179446174612072656c6179446174612960601b825282516103ab8160148501602087016103db565b9190910160140192915050565b90815260200190565b6000602082526103d460208301846102f1565b9392505050565b60005b838110156103f65781810151838201526020016103de565b83811115610405576000848401525b5050505056fe52656c6179446174612875696e743235362067617350726963652c75696e743235362070637452656c61794665652c75696e74323536206261736552656c61794665652c616464726573732072656c6179576f726b65722c61646472657373207061796d61737465722c6164647265737320666f727761726465722c6279746573207061796d6173746572446174612c75696e7432353620636c69656e74496429616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c62797465732064617461a2646970667358221220948c332a804a662a5161e30fc9849aae88a6bd29e143a7c159b6b40e13dc225664736f6c634300060c0033";
